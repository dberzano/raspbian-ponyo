#!/bin/bash -e

# Helper script transferring lightlog data to/from the remote storage

function _get() {
    # Fetch initial files via HTTP
    TMPS=$(mktemp)
    for ROOM in {{lightlog.http_rooms|join(' ')}}; do
        for SHARD in ${FETCH_SHARDS//,/ }; do
            REMOTE={{lightlog.http_baseurl}}/$ROOM/$SHARD
            LOCAL=$STORE_PREFIX/$ROOM/$SHARD

            # Fetch to temporary
            ERR=0
            curl -fSs "$REMOTE" -o "$TMPS" 2> /dev/null || ERR=$?
            if [[ $ERR != 0 ]]; then
                # Error results in empty file
                echo -n '' > $TMPS
            fi

            # Create full destination path and file (if not existing!)
            mkdir -p "$(dirname "$LOCAL")"
            touch "$LOCAL"

            # Which file is larger?
            SZ_REMOTE=$(stat -c %s "$TMPS")
            SZ_LOCAL=$(stat -c %s "$LOCAL")
            if [[ $SZ_REMOTE -gt $SZ_LOCAL ]]; then
                echo "Using remote version of $ROOM/$SHARD (larger size)"
                cp "$TMPS" "$LOCAL"
            else
                echo "Using current local version of $ROOM/$SHARD (larger size)"
            fi

            # Check if destination is empty: no need to have it around
            if [[ ! -s "$LOCAL" ]]; then
                rm "$LOCAL"
            fi
        done
    done
    rm -f "$TMPS"
}

function _put() {
    # Write to storage
    TMPK=$(mktemp)
    chmod 0600 "$TMPK"
    cat > "$TMPK" <<EOF
{{lightlog.ssh_privkey}}
EOF
    ERR=0
    rsync -av \
          --rsh="ssh -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no -oIdentityFile=$TMPK -l {{lightlog.ssh_user}} -p {{lightlog.ssh_port}}" \
          "$STORE_PREFIX"/ \
          "{{lightlog.ssh_dest}}" || ERR=$?
    rm -f "$TMPK"
    if [[ $ERR != 0 ]]; then
        exit 1
    fi
}

# Entry point
STORE_PREFIX="$2"
FETCH_SHARDS="$3"
if [[ $1 == get ]]; then
    # get: initial 2-way sync
    _get
    _put
elif [[ $1 == put ]]; then
    # put: 1-way sync to remote
    _put
fi

exit 0
